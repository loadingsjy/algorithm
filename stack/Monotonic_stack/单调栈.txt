前置知识 : 讲解013-用数组方式实现栈(常数时间比语言自己提供的好)

单调栈最经典的用法是解决如下问题：
每个位置都求：
0）当前位置的 左侧比当前位置的数字小，且距离最近的位置 在哪
1）当前位置的 右侧比当前位置的数字小，且距离最近的位置 在哪
或者
每个位置都求：
0）当前位置的 左侧比当前位置的数字大，且距离最近的位置 在哪
1）当前位置的 右侧比当前位置的数字大，且距离最近的位置 在哪

用单调栈的方式可以做到：求解过程中，单调栈所有调整的总代价为O(n)，单次操作的均摊代价为O(1)

注意：这是单调栈最经典的用法，可以解决很多题目，下节课将继续介绍其他的用法
注意：单调栈可以和很多技巧交叉使用！比如：动态规划+单调栈优化，会在【扩展】课程里讲述

-------------------------------------------------------------------------------------


除了单调栈最经典的用法之外，在很多问题里单调栈还可以 维持求解答案的可能性
1）单调栈里的所有对象按照 规定好的单调性来组织
2）当某个对象进入单调栈时，
   会从 栈顶开始 依次淘汰单调栈里 对后续求解答案没有帮助 的对象
3）每个对象从栈顶弹出的时 结算当前对象参与的答案，随后这个对象 不再参与后续求解答案的过程
4）其实是 先有对题目的分析！进而发现单调性，然后利用 单调栈的特征 去实现

注意：
单调栈可以和很多技巧交叉使用！
比如：动态规划+单调栈优化，会在【扩展】课程里讲述

